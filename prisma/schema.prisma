generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model roles {
  id        Int     @id @default(autoincrement())
  role_name String  @unique @db.VarChar(50)
  users     users[]
}

model users {
  id         Int          @id @default(autoincrement())
  name       String?      @db.VarChar(30)
  surname    String?      @db.VarChar(40)
  role       Int?
  email      String       @unique @db.VarChar(255)
  password   String       @db.VarChar(255)
  status     user_status? @default(pending)
  created_at DateTime?    @default(now()) @db.Timestamp(6)
  roles      roles?       @relation(fields: [role], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

model categories {
  id          Int        @id @default(autoincrement())
  name        String     @db.VarChar(100)
  description String?
  products    products[]
}

model logs {
  log_id       Int       @id @default(autoincrement())
  log_type     String    @db.VarChar(100)
  description  String
  performed_by String    @db.VarChar(100)
  log_date     DateTime? @default(dbgenerated("CURRENT_DATE")) @db.Date
}

model products {
  id              Int               @id @default(autoincrement())
  name            String            @db.VarChar(100)
  brand           String?           @db.VarChar(100)
  price           Decimal           @db.Decimal(10, 2)
  amount_in_stock Int
  item_weight     Decimal?          @db.Decimal(10, 2)
  description     String?
  category_id     Int?
  created_at      DateTime?         @default(now()) @db.Timestamp(6)
  product_type    product_type_enum @default(regular)
  categories      categories?       @relation(fields: [category_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
}

enum product_type_enum {
  spare_part
  regular
}

enum user_status {
  pending
  accepted
  rejected
}
